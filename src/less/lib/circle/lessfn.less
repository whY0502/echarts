/*圆角*/
.border_radius(@radius: 2px) {
  border-radius: @radius;
  -moz-border-radius: @radius;
  -webkit-border-radius: @radius;
}

.border_radius(@radius1,@radius2,@radius3,@radius4) {
  border-radius: @arguments;
  -moz-border-radius: @arguments;
  -webkit-border-radius: @arguments;
}

.box_shadow(@val) {
  box-shadow: @val;
  -moz-box-shadow: @val;
  -webkit-box-shadow: @val;
  -o-box-shadow: @val;
  -mis-box-shadow: @val;
}

.box_shadow(@val1,@val2) {
  box-shadow: @val1,@val2;
  -moz-box-shadow: @val1,@val2;
  -webkit-box-shadow: @val1,@val2;
  -o-box-shadow: @val1,@val2;
  -mis-box-shadow: @val1,@val2;
}

.display {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  /*兼容IE*/
  display: flex;
}

.box-sizing(@val: border-box) {
  -webkit-box-sizing: @val;
  -moz-box-sizing: @val;
  box-sizing: @val;
}

.flex(@val) {
  -webkit-box-flex: @val;
  -moz-box-flex: @val;
  flex: @val;
}


.transform(@a,...) {
  transform: @arguments;
  -ms-transform: @arguments;
  -webkit-transform: @arguments;
  -o-transform: @arguments;
  -moz-transform: @arguments;
}

/**过度*/
.transition(@a,...) {
  transition: @arguments;
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
}

/*左三角形*/
.triangle-left(@borderWidth,@bgColor){
  border-right:@borderWidth solid @bgColor;
  border-top:@borderWidth solid transparent;
  border-bottom:@borderWidth solid transparent;
}
/*右三角形*/
.triangle-right(@borderWidth,@bgColor){
  border-left:@borderWidth solid @bgColor;
  border-top:@borderWidth solid transparent;
  border-bottom:@borderWidth solid transparent;
}
/*上三角形*/
.triangle-top(@borderWidth,@bgColor){
  border-right:@borderWidth solid transparent;
  border-left:@borderWidth solid transparent;
  border-bottom:@borderWidth solid @bgColor;
}
/*下三角形*/
.triangle-bottom(@borderWidth,@bgColor){
  border-right:@borderWidth solid transparent;
  border-left:@borderWidth solid transparent;
  border-top:@borderWidth solid @bgColor;
}
/*渐变*/
.linear-gradient(@point :top ,@startColor,@endColor) {
  background: -webkit-linear-gradient(@point,@startColor,@endColor);
  background: -moz-linear-gradient(@point,@startColor,@endColor);
  background: -ms-linear-gradient(@point,@startColor,@endColor);
  filter: ~"progid: DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=@{startColor}, endColorstr=@{endColor})";
  background: @endColor;
}

.perspective(@val) {
  -webkit-perspective: @val;
  -moz-perspective: @val;
  -o-perspective: @val;
  -ms-perspective: @val;
  perspective: @val;
}

.transition-delay(@a,...) {
  -webkit-transition-delay: @arguments;
  -moz-transition-delay: @arguments;
  -o-transition-delay: @arguments;
  -ms-transition-delay: @arguments;
  transition-delay: @arguments;
}